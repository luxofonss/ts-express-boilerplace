version: '3.9'

services:
  # Express Server
  ts-base:
    build:
      context: .
      dockerfile: Dockerfile
    image: ts-base:latest
    container_name: ts-base
    ports:
      - '${PORT}:${PORT}'
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://root:${POSTGRES_ROOT_PASSWORD}@postgres:3307/${POSTGRES_DATABASE}
      PORT: 4040
    depends_on:
      - postgres
    restart: unless-stopped
    command: ['dumb-init', 'node', 'dist/index.js']

  # Postgres Database
  postgres:
    image: postgres:16.0
    container_name: postgres
    volumes:
      - db-data:/var/lib/postgres
    ports:
      - '3307:3306'
    environment:
      # ! dont use root user in prod
      POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_USER: root
      POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
    env_file:
      - ./.env
    restart: always

  sonarqube:
    image: sonarqube:9.9.1-community
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://ip:5432/sonarqube
      SONAR_JDBC_USERNAME: root
      SONAR_JDBC_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
      SONAR_WEB_JAVAADDITIONALOPTS: -javaagent:./extensions/plugins/sonarqube-community-branch-plugin-1.14.0.jar=web
      SONAR_CE_JAVAADDITIONALOPTS: -javaagent:./extensions/plugins/sonarqube-community-branch-plugin-1.14.0.jar=ce
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - '9000:9000'
volumes:
  db-data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
